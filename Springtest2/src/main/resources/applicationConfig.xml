<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--UserService的创建权交给了Spring-->
    <bean id="UserService" class="com.imooc.ioc.demo1.UserServiceImpl">
        <!--配置属性-->
        <property name="name" value="学生" />
        <property name="kind" value="努力学习的" />
    </bean>


    <!--bean的实力化的三种方式-->
    <!--第一种， 无参构造器方式-->
<!--    <bean id="Bean1" class="com.imooc.ioc.demo2.Bean1"></bean>-->
    <!--第二种，静态工厂方式-->
<!--    <bean id="Bean2" class="com.imooc.ioc.demo2.SpringBean2" factory-method="createBean2" />-->
    <!--第三种，实例工厂方式-->
<!--    <bean id="SpringBean3" class="com.imooc.ioc.demo2.SpringBean3"/>-->
<!--    <bean id="Bean3" factory-bean="SpringBean3" factory-method="createBean3"/>-->


    <!--bean的作用范围,scope为prototype时为多例，scope为singleton时为单例-->
<!--    <bean id="Person" class="com.imooc.ioc.demo3.Person" scope="singleton"/>     &lt;!&ndash;person&ndash;&gt;-->
        <!--bean生命周期-->
<!--    <bean id="Man" class="com.imooc.ioc.demo3.Man" init-method="setup" destroy-method="teardown">-->
<!--        <property name="name" value="张无忌"/>-->
<!--    </bean>-->
<!--    <bean class="com.imooc.ioc.demo3.MyBeanPostProcessor"/>-->

<!--    <bean id="UserDao" class="com.imooc.ioc.demo3.UserDaoImpl"/>-->


        <!--Bean 的构造方法的属性注入-->
<!--        <bean id="User" class="com.imooc.ioc.demo4.User">-->
<!--            <constructor-arg name="name" value="乔峰"/>-->
<!--            <constructor-arg name="age" value="38"/>-->
<!--        </bean>-->

        <!--Bean 的 set 方法的属性注入-->
<!--        <bean id="Person" class="com.imooc.ioc.demo4.Person">-->
<!--            <property name="name" value="段誉"/>-->
<!--            <property name="age" value="23"/>-->
<!--            <property name="cat" ref="Cat"/>-->
<!--        </bean>-->
<!--        <bean id="Cat" class="com.imooc.ioc.demo4.Cat">-->
<!--            <property name="name" value="kitty"/>-->
<!--        </bean>-->


       <!--Bean 的 p 名称空间的属性注入-->
       <bean id="Person" class="com.imooc.ioc.demo4.Person" p:name="段誉" p:age="23" p:cat-ref="Cat"/>
       <bean id="Cat" class="com.imooc.ioc.demo4.Cat" p:name="大黄"/>


       <!--Bean 的 SpEL 的属性注入-->
       <bean id="Category" class="com.imooc.ioc.demo4.Category">
           <property name="name" value="#{'服装'}"/>
       </bean>
       <bean id="ProductInfo" class="com.imooc.ioc.demo4.ProductInfo"/>
       <bean id="Product" class="com.imooc.ioc.demo4.Product">
           <property name="name" value="#{'男装'}"/>
           <property name="price" value="#{ProductInfo.calculatePrice()}"/>
           <property name="category" value="#{Category}" />
       </bean>

       <!--集合类型的属性注入-->
       <bean id="CollectionBean" class="com.imooc.ioc.demo5.CollectionBean">
           <!-- 数组类型 -->
           <property name="arrs">
               <list>
                   <value>aaa</value>
                   <value>bbb</value>
                   <value>ccc</value>
               </list>
           </property>
           <!-- List 类型 -->
           <property name="list">
               <list>
                   <value>111</value>
                   <value>222</value>
                   <value>333</value>
               </list>
           </property>
           <!-- Set 类型 -->
           <property name="set">
               <set>
                   <value>ddd</value>
                   <value>eee</value>
                   <value>fff</value>
               </set>
           </property>
           <!-- Map 类型 -->
           <property name="map">
               <map>
                   <entry key="aaa" value="111" />
                   <entry key="bbb" value="222" />
                   <entry key="ccc" value="333" />
               </map>
           </property>
           <!-- Properties 类型 -->
           <property name="properties">
               <props>
                   <prop key="username">root</prop>
                   <prop key="password">1234</prop>
               </props>
           </property>
       </bean>
</beans>